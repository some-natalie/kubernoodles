name: Test Podman (Fedora) runner

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - "images/podman.Dockerfile"
      - "images/**.sh"
      - "images/podman/*"
      - "images/software/*"
      - "tests/podman/*"
      - "tests/sudo-fails/*"
      - ".github/workflows/test-podman.yml"

jobs:
  build:
    name: Build test image
    runs-on: [self-hosted, podman]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build the image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ghcr.io/some-natalie/kubernoodles/podman
          tags: latest
          containerfiles: images/podman.Dockerfile

      - name: Push image
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: Deploy test image to `test-runners` namespace
    runs-on: [self-hosted, podman]
    needs: [build]
    environment: test

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Write out the kubeconfig info
        run: |
          echo ${{ secrets.DEPLOY_ACCOUNT }} | base64 -d > /tmp/config

      - name: Deploy
        run: |
          kubectl apply -f deployments/test-podman.yml
        env:
          KUBECONFIG: /tmp/config

      - name: Remove kubeconfig info
        run: rm -f /tmp/config

      - name: Wait 5 minutes to let the new pod come up
        run: sleep 300

  test:
    name: Run tests!
    runs-on: [self-hosted, test-podman]
    needs: [deploy]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Print debug info
        uses: ./tests/debug

      - name: Podman test
        uses: ./tests/podman

      - name: Sudo fails
        uses: ./tests/sudo-fails

  remove-deploy:
    name: Delete test image deployment
    runs-on: [self-hosted, podman]
    needs: [test]
    environment: test
    if: always()

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Write out the kubeconfig info
        run: |
          echo ${{ secrets.DEPLOY_ACCOUNT }} | base64 -d > /tmp/config

      - name: Deploy
        run: |
          kubectl delete -f deployments/test-podman.yml
        env:
          KUBECONFIG: /tmp/config

      - name: Remove kubeconfig info
        run: rm -f /tmp/config
