name: ðŸ§ª Test Wolfi runner

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - "images/wolfi.Dockerfile"
      - "images/**.sh"
      - ".github/workflows/test-wolfi.yml"

jobs:
  build:
    name: Build test image
    runs-on: ubuntu-24.04-arm # use the GitHub-hosted runner to build the image

    steps:
      - name: Set release id
        run: echo "SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Set up build summary
        run: |
          echo '### Build summary ðŸš€' >> $GITHUB_STEP_SUMMARY
          echo ' ' >> $GITHUB_STEP_SUMMARY
          echo '- Changes that produced this build [here](${{ github.server_url }}/${{ github.repository }}/commit/${{ env.SHA_SHORT }}) ' >> $GITHUB_STEP_SUMMARY
          echo '- Full code at this point in time [here](${{ github.server_url }}/${{ github.repository }}/tree/${{ env.SHA_SHORT }})' >> $GITHUB_STEP_SUMMARY
          echo ' ' >> $GITHUB_STEP_SUMMARY

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Login to GHCR
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        with:
          file: "images/wolfi.Dockerfile"
          push: true
          tags: ghcr.io/some-natalie/kubernoodles/wolfi:test

  minikube:
    name: Create minikube cluster
    runs-on: ubuntu-24.04-arm # use the GitHub-hosted runner to create the cluster
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up minikube
        shell: bash
        run: |
          minikube start
          minikube addons enable ingress
      - name: Set up kubectl
        shell: bash
        run: |
          minikube kubectl -- config use-context minikube
          echo "KUBECONFIG=${{ github.workspace }}/.kube/config" >> $GITHUB_ENV
          kubectl get nodes || { echo "Failed to connect to Kubernetes cluster"; exit 1; }
      - name: Set up ARC
        shell: bash
        run: |
          helm install arc \
            --namespace "arc-systems" \
            --create-namespace \
            oci://ghcr.io/actions/actions-runner-controller-charts/gha-runner-scale-set-controller
      - name: Set up test deployment
        shell: bash
        run: |
          helm install test-wolfi  \
            --namespace "test-runners" \
            --set githubConfigSecret.github_app_id="${{ vars.ARC_APP_ID }}" \
            --set githubConfigSecret.github_app_installation_id="${{ vars.ARC_INSTALL_ID }}" \
            --set githubConfigSecret.github_app_private_key="${{ secrets.ARC_APP_PRIVATE_KEY }}" \
            -f deployments/helm-wolfi-test.yml \
            oci://ghcr.io/actions/actions-runner-controller-charts/gha-runner-scale-set
      - name: Wait for completion (5 mins)
        shell: bash
        run: sleep 300
      - name: Remove deployment
        shell: bash
        run: |
          helm uninstall test-wolfi --namespace "test-runners"
          echo ' ' >> $GITHUB_STEP_SUMMARY
          echo 'ðŸ§¹ Test deployment removed' >> $GITHUB_STEP_SUMMARY

  test:
    name: Run tests!
    runs-on: test-wolfi
    needs: build
    timeout-minutes: 10

    steps:
      - name: Setup test summary
        run: |
          echo '### Test summary ðŸ§ª' >> $GITHUB_STEP_SUMMARY
          echo ' ' >> $GITHUB_STEP_SUMMARY
          echo '- âœ… runner builds and deploys' >> $GITHUB_STEP_SUMMARY

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Print debug info
        uses: ./tests/debug

      - name: Sudo fails
        uses: ./tests/sudo-fails
