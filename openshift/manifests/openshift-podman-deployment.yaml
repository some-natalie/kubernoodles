apiVersion: actions.summerwind.dev/v1alpha1
kind: RunnerDeployment
metadata:
  name: openshift-podman-runner
  # Claim namespace if needed
  # namespace:
spec:
  # Using "HorizontalRunnerAutoscaler"
  # replicas: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      # Assign runner group
      group: OpenShift
      # Add lables for targeting
      labels:
        - podman,openshift
      # Adding the security context
      securityContext:
        privileged: true
        fsGroup: 1000
      # Name of the GitHub Org
      organization: ocpdude
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: "8Gi"
        requests:
          cpu: "2"
          memory: "2Gi"
      image: ghcr.io/ocpdude/podman-runner:6
      # Optionally break out the storage layer for podman,
      # handy for large builds that need persistant data 
      # between runners
#       containers:
#       - name: runner
#         volumeMounts:
#         - mountPath: /home/podman/.local/share/containers/storage 
#           name: podman-storage
#       volumes:
#       - name: podman-storage
#         persistentVolumeClaim: 
#           claimName: "podman-runner-pvc"

# ---
# apiVersion: "v1"
# kind: "PersistentVolumeClaim"
# metadata:
#   name: "podman-runner-pvc"
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 1Gi
#   storageClassName: "thin"
#   volumeMode: Filesystem

---
apiVersion: actions.summerwind.dev/v1alpha1
kind: HorizontalRunnerAutoscaler
metadata:
  name: podman-runner-autoscaler
spec:
  scaleDownDelaySecondsAfterScaleOut: 300
  scaleTargetRef:
    name: openshift-podman-runner
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: PercentageRunnersBusy
    scaleUpThreshold: '0.75'
    scaleDownThreshold: '0.25'
    scaleUpFactor: '2'
    scaleDownFactor: '0.5'
